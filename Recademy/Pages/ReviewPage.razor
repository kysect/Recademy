@page "/review/{requestId:int}"
@using Cloudcrate.AspNetCore.Blazor.Browser.Storage
@using Recademy.Dto
@using Recademy.Services.Abstraction
@inject IReviewService ReviewService
@inject IProjectService ProjectService
@inject LocalStorage Storage

<h3>Review @requestId</h3>
<p>
    <MatTextField @bind-Value="@textArea" Label="Your review" TextArea="true"></MatTextField>
</p>
@if (project == null)
{
    <p>Вы проиграли</p>
}
else
{
    <p>@project.RequesTime</p>
    <p>@project.Title</p>
    <p>@project.Description</p>
    <p>@project.Link</p>
}
<MatButton Outlined="true" Icon="send" OnClick="@Click">@buttonMessage</MatButton>

@code
{
    public string textArea = "";

    string buttonMessage = "Send review";
    
    public int Id { get; set; }

    protected override void OnInitialized()
    {
        project = ReviewService.GetReviewInfo(requestId);
        Id = Storage.GetItemAsync<int>("storageKey").Result;
    }

    ReviewProjectDto project;

    void Click()
    {
        if (textArea == "")
            buttonMessage = "Nope";
        else
        {
            ReviewService.SendReviewResponse(SendReviewRequestDto.Of(requestId, textArea));
            buttonMessage = "Review sent";
        }
    }
    [Parameter]
    public int requestId { get; set; }
}
