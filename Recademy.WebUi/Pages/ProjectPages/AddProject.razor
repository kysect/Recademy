@page "/projects/add"
@using Recademy.Dto.Projects
@inject HttpClient Http
@inject IBlazorStrap BlazorStrap

<BSToaster />

@if (MainLayout.User is null)
{
    <Unauthorized />
}
else
{
    <BSLabel MarginTop="Margins.Small">Название проекта</BSLabel>
    <BSInput InputType="InputType.Text" Class="form-input" ValidateOnInput="true" @bind-Value="_projectTitle"></BSInput>

    <BSLabel MarginTop="Margins.Small">Описание проекта</BSLabel>
    <BSInput InputType="InputType.TextArea" Class="form-input" @bind-Value="_projectDescription"></BSInput>

    <BSLabel MarginTop="Margins.Small">Ссылка на проект</BSLabel>
    <BSInput InputType="InputType.Url" Class="form-input" ValidateOnInput="true" @bind-Value="_projectLink"></BSInput>

    <!-- TODO: tags -->

    <button style="margin-top: 1em;" @onclick="CreateProject" MarginTopAndBottom="Margins.Medium">Добавить</button>
}

@code {
    private string _projectTitle;
    private string _projectDescription;
    private string _projectLink;

    private async Task CreateProject()
    {
        if (MainLayout.User is null)
            return;

        var request = new CreateProjectDto
        (
            AuthorId: MainLayout.User.Id,
            Title: _projectTitle,
            Description: _projectDescription,
            Link: _projectLink,
            new List<string>()
        );

        var response = await Http.PostAsJsonAsync($"api/projects", request);

        if (response.IsSuccessStatusCode)
        {
            BlazorStrap.Toaster.Add($"Проект {request.Title} успешно добавлен", o =>
            {
                o.Color = BSColor.Success;
                o.CloseAfter = 3000;
                o.Toast = Toast.BottomRight;
            });
        }
        else
        {
            string errorMessage = await response.Content.ReadAsStringAsync();
            string toasterMessage = "Произошла ошибка при добавлении проекта";

            if (!string.IsNullOrEmpty(errorMessage))
                toasterMessage += $": {errorMessage}";

            BlazorStrap.Toaster.Add(toasterMessage, o =>
            {
                o.Color = BSColor.Danger;
                o.CloseAfter = 3000;
                o.Toast = Toast.BottomRight;
            });
        }

        _projectTitle = default;
        _projectDescription = default;
        _projectLink = default;
    }
}