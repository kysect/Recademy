@page "/achievements/requests"
@using Recademy.Dto.Achievements
@inject HttpClient Http
@inject NavigationManager NavigationManager

@if (MainLayout.User is null)
{
    <Unauthorized />
}
else
{
    <h3>Запросы на получение достижений</h3>
    
    // TODO: switch to .NET 7 to use [..]
    @if (_requests is not null && !_requests.Any())
    {
        <p>Запросы на получение достижений отсуствуют</p>
    }
    else
    {
        <BSTable Color="BSColor.Light" IsBordered="true" IsBorderLess="false" IsCaptionTop="false" IsStriped="false">
            <BSTHead>
                <BSTR>
                    <BSTD>Id</BSTD>
                    <BSTD>Achievement</BSTD>
                    <BSTD>User</BSTD>
                    <BSTD>Reason</BSTD>
                </BSTR>
            </BSTHead>
            <BSTBody>
                @if (_requests is not null)
                {
                    @foreach (UserAchievementRequestDto request in _requests)
                    {
                        <BSTR>
                            <BSTD>@request.RequestId</BSTD>
                            <BSTD>@request.Achievement.Title</BSTD>
                            <BSTD>@request.User.GithubUsername</BSTD>
                            <BSTD>@request.Reason</BSTD>
                            <BSTD>
                                <BSButton Color="BSColor.Primary" style="background-color: slateblue; border: 0; border-radius: 12px;" @onclick="@(() => Reply(@request.RequestId))">
                                    Ответить
                                </BSButton>
                            </BSTD>
                        </BSTR>
                    }
                }
            </BSTBody>
        </BSTable>
    }
}

@code {
    private const string ResponsePageUri = "/achievements/requests/{0}/response";
    private IReadOnlyCollection<UserAchievementRequestDto> _requests;

    protected override async Task OnInitializedAsync()
    {
        var response = await Http.GetFromJsonAsync<IReadOnlyCollection<UserAchievementRequestDto>>("api/achievements/users/requests");

        _requests = response ?? new List<UserAchievementRequestDto>();
    }

    private void Reply(int requestId) => NavigationManager.NavigateTo(String.Format(ResponsePageUri, requestId));
}
