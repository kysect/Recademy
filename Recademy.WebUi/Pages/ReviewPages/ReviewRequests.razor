@page "/projects/reviews/requests"
@using Recademy.Dto.Reviews
@using Recademy.Common
@using Recademy.Dto.Enums
@inject HttpClient Http
@inject NavigationManager NavigationManager

@if (MainLayout.User is null)
{
    <Unauthorized />
}
else
{
    <h3>Запросы на ревью</h3>

    @if (_reviewRequests is not null && !_reviewRequests.Any())
    {
        <p>Запросы на ревью отсуствуют</p>
    }
    else
    {
        @if (_reviewRequests is not null)
        {

            @foreach (ReviewRequestInfoDto request in _reviewRequests)
            {
                <div style="display: flex; flex-direction: row; justify-content: space-between; align-items: baseline; padding: 1em; background-color: white; border-radius: 12px; box-shadow: 5px 5px lightgray;">
                    <p style="margin: 0"><b>@request.ProjectInfo?.Title</b></p>
                    <p style="margin: 0">@request.Username</p>
                    <p>@request.CreationDate</p>
                    <p>@request.State.TranslateToString()</p>
                    @if (MainLayout.User?.HasMentorRights() ?? false)
                    {
                        <button style="padding: 2px 10px; background-color: slateblue; color: white; border: 0; border-radius: 12px;" @onclick="() => OpenReviewResponsePage(request.Id)">
                            Оценить
                        </button>
                    }
                </div>
            }
        }
    }
}

@code {
    private IReadOnlyCollection<ReviewRequestInfoDto> _reviewRequests = new List<ReviewRequestInfoDto>();

    protected override async Task OnInitializedAsync()
    {
        if (MainLayout.User is null)
            return;

        var reviewRequests = await Http.GetFromJsonAsync<IReadOnlyCollection<ReviewRequestInfoDto>>("api/reviews/requests/user");

        if (reviewRequests is not null)
        {
            _reviewRequests = reviewRequests;
        }
    }

    private void OpenReviewResponsePage(int requestId)
    {
        NavigationManager.NavigateTo($"/projects/reviews/responses/create/{requestId}");
    }
}